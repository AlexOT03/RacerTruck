---
import { Image } from "astro:assets";
// this 3 lines of code are necessary to translate the elements that we need to translate i others languages
import {
	getLangFromUrl,
	useTranslations,
	useTranslatedPath,
} from "../i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<main
	class="mx-auto max-w-screen-xl px-4 mb-8 mt-12 sm:mt-12 sm:mb-12 sm:px-6 md:mt-32 md:mb-20 xl:mt-23 xl:mb-24"
>
	<div class="lg:grid lg:grid-cols-12 lg:gap-8">
		<div class="mb-12 md:max-w-1xl md:mx-auto lg:col-span-8">
			<h1
				class="mt-1 text-4xl tracking-tight leading-10 font-extrabold text-gray-900 sm:leading-none sm:text-6xl lg:text-5xl xl:text-6xl uppercase"
			>
				{t("hero.title")}
			</h1>
      <h2 class="text-2xl font-bold text-gray-800">{t("hero.subtitle")}</h2>

			<p
				class="mt-3 text-base text-gray-500 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl font-body"
			>
				{t("hero.paragraph.one")}
			</p>

			<p
				class="mt-3 text-base text-gray-500 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl font-body"
			>
				{t("hero.paragraph.two")}
			</p>

			<p
				class="mt-3 text-base text-gray-500 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl font-body"
			>
				{t("hero.paragraph.three")}
			</p>
		</div>

		<div
			class="mt-12 relative sm:max-w-lg sm:mx-auto lg:mt-0 lg:max-w-none lg:mx-0 lg:col-span-4 lg:flex lg:items-center"
		>
    <Image id="book" class="transition-all ease-in-out"
    src={"https://landing-page-book-astro-svelte-tailwind.vercel.app/cover-2.jpeg"}
    width={300}
    height={600}
    alt={"Chapada do Corisco"}
    format={"avif"}
    loading={"eager"}
  />
		</div>
	</div>
</main>

<style>
	#book {
		transition: box-shadow 0.1s transform;
	}

	#book:hover {
		box-shadow: 0 0 40px rgba(0, 0, 0, 0.9);
	}
</style>

<script>
	const el = document.getElementById("book");
	const height = el?.clientHeight;
	const width = el?.clientWidth;

	el?.addEventListener("mousemove", (evt) => {
		const { layerX, layerY } = evt;

		const yRotation = ((layerX - width / 2) / width) * 20;

		const xRotation = ((layerY - height / 2) / height) * 20;

		const string = `
    perspective(500px) 
    scale(1.1) 
    rotateX(${xRotation}deg) 
    rotateY(${yRotation}deg)`;

		el.style.transform = string;

		el.addEventListener("mouseout", (evt) => {
			el.style.transform = `
    perspective(500px) 
    scale(1) 
    rotateX(0) 
    rotateY(0)`;
		});
	});
</script>
